enum HabitRecordStatus {
  SUCCESS
  FAILED
  PENDING
}

input OnboardInput {
  name: String!
  iconPath: String!
}

input UpdateProfileInput {
  name: String!
  iconPath: String!
}

input CreateHabitInput {
  name: String!
  description: String!
}

input UpdateHabitInput {
  name: String!
  description: String!
}

input UpdateHabitRecordInput {
  habitId: String!
  date: String!
  status: HabitRecordStatus!
}

type User {
  id: ID!
  name: String!
  iconUrl: String
  habits: [Habit!]!
}

type Habit {
  id: ID!
  name: String!
  description: String!
  habitRecords: [HabitRecord!]!
  tooHard: Boolean!
}

type HabitRecord {
  id: ID!
  date: String!
  status: HabitRecordStatus!
}

type Query {
  viewer: User
}

type Mutation {
  onboard(input: OnboardInput!): User!
  updateProfile(input: UpdateProfileInput!): User!
  deleteAccount: ID!
  createHabit(input: CreateHabitInput!): Habit!
  updateHabit(id: ID!, input: UpdateHabitInput!): Habit!
  deleteHabit(id: ID!): Habit!
  updateHabitRecord(input: UpdateHabitRecordInput!): HabitRecord!
}
